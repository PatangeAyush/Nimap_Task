@model List<ProductCombinedViewModel>

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title></title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <style>
        body {
            font-family: Arial;
            margin: 20px;
        }

        .container {
            max-width: 900px;
            margin: auto;
        }

        .header-buttons {
            margin-bottom: 20px;
            text-align: Left;
        }

        .header-buttons .btn {
            margin-right: 10px;
        }

        table {
            margin-top: 10px;
        }

        .pagination {
            margin-top: 20px;
            text-align: center;
        }

        .pagination .btn {
            margin: 0 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header-buttons">
            <a href="@Url.Action("GetProducts", "Product")" class="btn btn-primary">Product CRUD</a>
            <a href="@Url.Action("GetCategories", "Category")" class="btn btn-success">Category CRUD</a>
        </div>

        <table class="table table-striped table-bordered">
            <thead class="table-dark">
                <tr>
                    <th>Product ID</th>
                    <th>Product Name</th>
                    <th>Category ID</th>
                    <th>Category Name</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.ProductID</td>
                        <td>@item.ProductName</td>
                        <td>@item.CategoryID</td>
                        <td>@item.CategoryName</td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="pagination">
            @if (ViewData["CurrentPage"] != null && ViewData["TotalPages"] != null)
            {
                int currentPage = (int)ViewData["CurrentPage"];
                int totalPages = (int)ViewData["TotalPages"];

               
                @if (currentPage > 1)
                {
                    <a href="@Url.Action("Index", new { page = currentPage - 1 })" class="btn btn-secondary">Previous</a>
                }

                
                @for (int i = 1; i <= totalPages; i++)
                {
                    <a href="@Url.Action("Index", new { page = i })" class="btn btn-primary @((i == currentPage) ? "disabled" : "")">@i</a>
                }

              
                @if (currentPage < totalPages)
                {
                    <a href="@Url.Action("Index", new { page = currentPage + 1 })" class="btn btn-secondary">Next</a>
                }
            }
        </div>
    </div>
</body>
</html>
